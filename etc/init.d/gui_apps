#!/sbin/openrc-run

description="Sets InkBox GUI user apps up"

depend() {
	keyword -prefix -lxc
	after onboard_mount
}

start() {
	einfo "Setting up GUI user applications"
	[ ! -d "/data/onboard/.apps" ] && mkdir -p "/data/onboard/.apps"
	for f in /data/onboard/.apps/*.isa; do
		if openssl dgst -sha256 -verify /opt/key/applications-public.pem -signature "${f}.dgst" "${f}"; then
			extension_archive="${f}"
			extension_name="$(basename -s '.isa' ""${extension_archive}"")"
			extension_mountpoint="/data/onboard/.apps/${extension_name}"
			extension_userdata_path="/data/onboard/.apps-data/${extension_name}"
			[ ! -d "${extension_mountpoint}" ] && mkdir -p "${extension_mountpoint}"
			squashfuse "${extension_archive}" "${extension_mountpoint}" || eerror "Failed to mount GUI user application archive '${extension_archive}' at '${extension_mountpoint}'"; eend 1

			# chroot requirements
			[ ! -d "/data/onboard/.apps-data" ] && mkdir -p "/data/onboard/.apps-data"
			[ ! -d "${extension_userdata_path}" ] && mkdir -p "${extension_userdata_path}"
			mount -t sysfs sysfs "${extension_mountpoint}/sys" || eerror "Failed to mount sys filesystem at '${extension_mountpoint}/sys'."; eend 1
			mount -t tmpfs tmpfs -o size=1K "${extension_mountpoint}/dev" || eerror "Failed to mount temporary filesystem at '${extension_mountpoint}/dev'."; eend 1
			mount -t proc proc "${extension_mountpoint}/proc" || eerror "Failed to mount proc filesystem at '${extension_mountpoint}/proc'."; eend 1
			mknod "${extension_mountpoint}/dev/fb0" c 29 0 && chown user:user "${extension_mountpoint}/dev/fb0" || eerror "Failed to set up '${extension_mountpoint}/dev/fb0' device node."; eend 1
			mount --bind "${extension_userdata_path}" "${extension_mountpoint}/app-data" || eerror "Failed to bind-mount user data directory '${extension_userdata_path}' at '${extension_mountpoint}/app-data'."; eend 1		
		else
			ewarn "GUI user application '${extension_archive}''s digital signature is invalid!"
		fi
	done
	mount --rbind /data/onboard /kobo/mnt/onboard/onboard
	eend $?
}

stop() {
	sync
	umount -l -f /kobo/mnt/onboard/onboard
}
